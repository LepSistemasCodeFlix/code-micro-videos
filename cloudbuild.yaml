steps:

- id: 'Run docker-compose'
  name: 'gcr.io/$PROJECT_ID/docker-compose:1.28.2'
  args: ['-f', 'docker-compose.prod.yaml', 'up', '-d']

- id: 'Run docker ps'
  name: 'gcr.io/cloud-builders/docker'
  args: ['ps']

- id: 'Run composer'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'composer', 'install']

- id: 'Copy .env'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'cp', '.env.example', '.env']

- id: 'Copy .env.testing'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'cp', '.env.testing.example', '.env.testing']

- id: 'Generate key'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/artisan', 'key:generate']

- id: 'Run migrations'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/artisan', 'migrate']

- id: 'Run PhpUnit'
  name: 'gcr.io/cloud-builders/docker'
  args: ['exec', '-t', 'app', 'php', '/var/www/vendor/bin/phpunit', '-c', '/var/www/phpunit.xml']
